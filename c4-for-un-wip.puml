' C4-PlantUML-for-UN, version 1.0.0
' https://github.com/RicardoNiepel/C4-PlantUML
' https://github.com/seungsoo0son/c4-plantuml-for-un 
' Combine all to one single template for UN use 

' Colors
' ##################################

!define ELEMENT_FONT_COLOR #FFFFFF

!define PERSON_BG_COLOR #08427B
!define EXTERNAL_PERSON_BG_COLOR #686868
!define SYSTEM_BG_COLOR #1168BD
!define EXTERNAL_SYSTEM_BG_COLOR #999999

!define CONTAINER_BG_COLOR #438DD5

' Styling
' ##################################

!define TECHN_FONT_SIZE 12

skinparam defaultTextAlignment center

skinparam backgroundColor #EEEBDC

skinparam wrapWidth 200
skinparam maxMessageSize 150

skinparam rectangle {
    StereotypeFontSize 12
    shadowing false
}

skinparam database {
    StereotypeFontSize 12
    shadowing false
}

skinparam Arrow {
    Color #666666
    FontColor #666666
    FontSize 12
}

skinparam rectangle<<boundary>> {
    Shadowing false
    StereotypeFontSize 0
    FontColor #444444
    BorderColor #444444
}

skinparam actor<<actor>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor PERSON_BG_COLOR
    BackgroundColor PERSON_BG_COLOR
    BorderColor #073B6F
}

skinparam actor<<external_actor>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor EXTERNAL_PERSON_BG_COLOR
    BackgroundColor EXTERNAL_PERSON_BG_COLOR
    BorderColor #8A8A8A
}

skinparam rectangle<<system>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor SYSTEM_BG_COLOR
    BorderColor #3C7FC0
}

skinparam rectangle<<external_system>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor EXTERNAL_SYSTEM_BG_COLOR
    BorderColor #8A8A8A
}

skinparam database<<system>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor SYSTEM_BG_COLOR
    BorderColor #3C7FC0
}

skinparam database<<external_system>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor EXTERNAL_SYSTEM_BG_COLOR
    BorderColor #8A8A8A
}

skinparam rectangle<<container>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor CONTAINER_BG_COLOR
    BorderColor #3C7FC0
}

skinparam database<<container>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor CONTAINER_BG_COLOR
    BorderColor #3C7FC0
}

skinparam usecase<<container>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor CONTAINER_BG_COLOR
    BorderColor #3C7FC0
}

' Layout
' ##################################

!definelong LAYOUT_AS_SKETCH
skinparam backgroundColor White
skinparam handwritten true
skinparam defaultFontName "Comic Sans MS"
center footer <font color=red>Warning:</font> Created for discussion, needs to be validated
!enddefinelong

!define LAYOUT_TOP_DOWN top to bottom direction
!define LAYOUT_LEFT_RIGHT left to right direction

!definelong LAYOUT_WITH_LEGEND
hide stereotype
legend right
|=              |= Type |
|<PERSON_BG_COLOR>      | person |
|<EXTERNAL_PERSON_BG_COLOR>      | external person |
|<SYSTEM_BG_COLOR>   | system |
|<EXTERNAL_SYSTEM_BG_COLOR>      | external system |
|<CONTAINER_BG_COLOR>   | container |
endlegend
!enddefinelong

' Boundaries
' ##################################

!define Boundary(e_alias, e_label, e_type) rectangle "==e_label\n<size:TECHN_FONT_SIZE>[e_type]</size>" <<boundary>> as e_alias
!define Boundary(e_alias, e_label, e_type, e_lstyle) rectangle "==e_label\n<size:TECHN_FONT_SIZE>[e_type]</size>" <<boundary>> as e_alias e_lstyle

!define Enterprise_Boundary(e_alias, e_label) Boundary(e_alias, e_label, "Enterprise")
!define Office_Boundary(e_alias, e_label) Boundary(e_alias, e_label, "Office")
!define DC_Boundary(e_alias, e_label) Boundary(e_alias, e_label, "Data Center", "#DarkBlue;line.dashed")
!define Zone_Boundary(e_alias, e_label) Boundary(e_alias, e_label, "Zone", "#Blue;line.dashed")
!define System_Boundary(e_alias, e_label) Boundary(e_alias, e_label, "System", "#line.dotted")
'!define Container_Boundary(e_alias, e_label) Boundary(e_alias, e_label, "Container")

' Elements
' ##################################
!define Person(e_alias, e_label) actor "==e_label" <<actor>> as e_alias
!define Person(e_alias, e_label, e_descr) actor "==e_label\n\n e_descr" <<actor>> as e_alias

!define Person_Ext(e_alias, e_label) actor "==e_label" <<external_actor>> as e_alias
!define Person_Ext(e_alias, e_label, e_descr) actor "==e_label\n\n e_descr" <<external_actor>> as e_alias

!define System(e_alias, e_label) rectangle "==e_label" <<system>> as e_alias
!define System(e_alias, e_label, e_descr) rectangle "==e_label\n\n e_descr" <<system>> as e_alias

!define System_Ext(e_alias, e_label) rectangle "==e_label" <<external_system>> as e_alias
!define System_Ext(e_alias, e_label, e_descr) rectangle "==e_label\n\n e_descr" <<external_system>> as e_alias

!define SystemDb(e_alias, e_label) database "==e_label" <<system>> as e_alias 
!define SystemDb(e_alias, e_label, e_descr) database "==e_label\n\n e_descr" <<system>> as e_alias

!define SystemDb_Ext(e_alias, e_label) database "==e_label" <<external_system>> as e_alias
!define SystemDb_Ext(e_alias, e_label, e_descr) database "==e_label\n\n e_descr" <<external_system>> as e_alias

!define ContainerC(e_alias, e_label, e_techn) usecase "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container>> as e_alias
!define ContainerC(e_alias, e_label, e_techn, e_descr) usecase "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//\n\n e_descr" <<container>> as e_alias

!define Container(e_alias, e_label, e_techn) rectangle "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container>> as e_alias
!define Container(e_alias, e_label, e_techn, e_descr) rectangle "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//\n\n e_descr" <<container>> as e_alias

!define ContainerDb(e_alias, e_label, e_techn) database "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container>> as e_alias
!define ContainerDb(e_alias, e_label, e_techn, e_descr) database "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//\n\n e_descr" <<container>> as e_alias

' Access 
' ##################################
!define Access_(e_from, e_to, e_label, e_direction="") e_from e_direction e_to : "===e_label" 
!define Access_(e_from, e_to, e_label, e_techn, e_direction="") e_from e_direction e_to : "===e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//"
!define Access(e_from, e_to, e_label) Access_(e_from, e_to, e_label, "-->")
!define Access(e_from, e_to, e_label, e_techn) Access_(e_from, e_to, e_label, e_techn, "-->")
!define Access_U(e_from, e_to, e_label) Access_(e_from, e_to, e_label, "-UP->")
!define Access_U(e_from, e_to, e_label, e_techn) Access_(e_from, e_to, e_label, e_techn, "-UP->")
!define Access_D(e_from, e_to, e_label) Access_(e_from, e_to, e_label, "-DOWN->")
!define Access_D(e_from, e_to, e_label, e_techn) Access_(e_from, e_to, e_label, e_techn, "-DOWN->")
!define Access_L(e_from, e_to, e_label) Access_(e_from, e_to, e_label, "-LEFT->")
!define Access_L(e_from, e_to, e_label, e_techn) Access_(e_from, e_to, e_label, e_techn, "-LEFT->")
!define Access_R(e_from, e_to, e_label) Access_(e_from, e_to, e_label, "-RIGHT->")
!define Access_R(e_from, e_to, e_label, e_techn) Access_(e_from, e_to, e_label, e_techn, "-RIGHT->")

' Layout Helpers
' ##################################

!define Lay_D(e_from, e_to) e_from -[hidden]D- e_to
!define Lay_U(e_from, e_to) e_from -[hidden]U- e_to
!define Lay_R(e_from, e_to) e_from -[hidden]R- e_to
!define Lay_L(e_from, e_to) e_from -[hidden]L- e_to


